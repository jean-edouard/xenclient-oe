################################################################################
SHORT DESCRIPTION:
################################################################################
Move the extra QEMU arguments to the end of the list

################################################################################
LONG DESCRIPTION:
################################################################################
In general we think it makes more sense for "extra" arguments to be at the end.

Concretely, we want to be able to add drives using those extra arguments.
However, libxl assigns indexes to the drives, instead of letting qemu decide,
starting at index 0.
Without this patch, having a drive in extra would auto assign an index of 0 to
it, conflicting with the first drive xl adds...

################################################################################
CHANGELOG
################################################################################
Authors:
Chris Rogers <rogersc@ainfosec.com>

################################################################################
REMOVAL
################################################################################
Removing this will break atapi-pt.

################################################################################
UPSTREAM PLAN
################################################################################
We should probably upstream this.

################################################################################
INTERNAL DEPENDENCIES
################################################################################

################################################################################
PATCHES
################################################################################
Index: xen-4.6.1/tools/libxl/libxl_dm.c
===================================================================
--- xen-4.6.1.orig/tools/libxl/libxl_dm.c
+++ xen-4.6.1/tools/libxl/libxl_dm.c
@@ -622,8 +622,6 @@ static int libxl__build_device_model_arg
     if (state->saved_state) {
         flexarray_vappend(dm_args, "-loadvm", state->saved_state, NULL);
     }
-    for (i = 0; b_info->extra && b_info->extra[i] != NULL; i++)
-        flexarray_append(dm_args, b_info->extra[i]);
     flexarray_append(dm_args, "-machine");
     switch (b_info->type) {
     case LIBXL_DOMAIN_TYPE_PV:
@@ -639,6 +637,8 @@ static int libxl__build_device_model_arg
     default:
         abort();
     }
+    for (i = 0; b_info->extra && b_info->extra[i] != NULL; i++)
+        flexarray_append(dm_args, b_info->extra[i]);
     flexarray_append(dm_args, NULL);
     *args = (char **) flexarray_contents(dm_args);
     flexarray_append(dm_envs, NULL);
@@ -1059,8 +1059,6 @@ static int libxl__build_device_model_arg
         flexarray_append(dm_args, "-incoming");
         flexarray_append(dm_args, GCSPRINTF("fd:%d",*dm_state_fd));
     }
-    for (i = 0; b_info->extra && b_info->extra[i] != NULL; i++)
-        flexarray_append(dm_args, b_info->extra[i]);
 
     flexarray_append(dm_args, "-machine");
     switch (b_info->type) {
@@ -1204,6 +1202,8 @@ static int libxl__build_device_model_arg
             break;
         }
     }
+    for (i = 0; b_info->extra && b_info->extra[i] != NULL; i++)
+        flexarray_append(dm_args, b_info->extra[i]);
     flexarray_append(dm_args, NULL);
     *args = (char **) flexarray_contents(dm_args);
     flexarray_append(dm_envs, NULL);
