################################################################################
SHORT DESCRIPTION: 
################################################################################
Implement VBE supplemental function 15h returning an hardcoded EDID we provide
and adapt. Also modifies function 00h to comply with the maximum resolution set
in the EDID.

################################################################################
LONG DESCRIPTION: 
################################################################################
Add VBE Function 15h (sub-functions 00 & 01) to VGABIOS providing the guest
with an EDID modified to match the display managed by Surfman.

VBE Function 00h has to be modified to exclude any resolution, present in the
default hardcoded EDID, bigger than the biggest resolution we recovered from
Surfman.

QEMU exposes IO ports with information received from Surfman concerning the
display. We then modify a default hardcoded EDID already containing default
VESA modelines, extending it with the optimal modeline from Surfman, and pass
it to the guest system.

################################################################################
CHANGELOG 
################################################################################
Documented: Eric Chanudet, chanudete@ainfosec.com, 17/03/2015
Ported to VGABIOS: Eric Chanudet, chanudete@ainfosec.com, 01/03/2015

################################################################################
REMOVAL 
################################################################################
This patch can be removed on its own.
This patch needs to be removed if QEMU vbe-xt-extensions is removed.

################################################################################
UPSTREAM PLAN 
################################################################################
This is an OpenXT work-around. There is no plan to upstream this patch.

################################################################################
INTERNAL DEPENDENCIES 
################################################################################
Implements QEMU: vbe-xt-extensions.patch
Depended on by VGABIOS: vbe-extensions.patch

################################################################################
PATCHES
################################################################################
Index: vgabios-0.7a/vbe.c
===================================================================
--- vgabios-0.7a.orig/vbe.c	2015-11-18 17:50:03.400927090 +0100
+++ vgabios-0.7a/vbe.c	2015-11-27 15:23:51.764553004 +0100
@@ -241,6 +241,18 @@
   ret
 ASM_END
 
+static Bit16u dispi_edid_get_xres()
+{
+  outw(VBE_DISPI_IOPORT_INDEX, VBE_DISPI_EXT_INDEX_EDID_XRES);
+  return inw(VBE_DISPI_IOPORT_DATA);
+}
+
+static Bit16u dispi_edid_get_yres()
+{
+  outw(VBE_DISPI_IOPORT_INDEX, VBE_DISPI_EXT_INDEX_EDID_YRES);
+  return inw(VBE_DISPI_IOPORT_DATA);
+}
+
 static void dispi_set_xres(xres)
   Bit16u xres;
 {
@@ -776,6 +788,30 @@
   ret
 ASM_END
 
+ASM_START
+; Bit32u helper functions
+landul:
+  SEG SS
+    and ax,[di]
+  SEG SS
+    and bx,2[di]
+  ret
+
+ldivul:
+  and  eax, #0x0000FFFF
+  shl  ebx, #16
+  or   eax, ebx
+  xor  edx, edx
+  SEG SS
+  mov  bx,  2[di]
+  shl  ebx, #16
+  SEG SS
+  mov  bx,  [di]
+  div  ebx
+  mov  ebx, eax
+  shr  ebx, #16
+  ret
+ASM_END
 
 /** Function 00h - Return VBE Controller Information
  * 
@@ -800,9 +836,13 @@
         Bit16u            cur_ptr=34;
         Bit16u            size_64k;
         ModeInfoListItem  *cur_info=&mode_info_list;
+        Bit16u            xres;
+        Bit16u            yres;
 
         status = read_word(ss, AX);
 
+        xres = dispi_edid_get_xres();
+        yres = dispi_edid_get_yres();
 #ifdef DEBUG
         printf("VBE vbe_biosfn_return_vbe_info ES%x DI%x AX%x\n",ES,DI,status);
 #endif
@@ -882,7 +922,8 @@
         {
                 size_64k = size64(cur_info->info.XResolution, cur_info->info.YResolution, cur_info->info.BitsPerPixel);
 
-                if ((cur_info->info.XResolution <= dispi_get_max_xres()) &&
+                if ((cur_info->info.XResolution <= xres) &&
+                    (cur_info->info.YResolution <= yres) &&
                     (cur_info->info.BitsPerPixel <= dispi_get_max_bpp()) &&
                     (size_64k <= vbe_info_block.TotalMemory)) {
 #ifdef DEBUG
@@ -928,6 +969,7 @@
         Boolean           using_lfb;
         Bit16u            lfb_addr;
         ModeInfoBlockCompact   info;
+        Bit16u            xres = dispi_edid_get_xres();
 
 #ifdef DEBUG
         printf("VBE vbe_biosfn_return_mode_information ES%x DI%x CX%x\n",ES,DI,CX);
@@ -952,7 +994,7 @@
 #endif
                 memcpyb(ss, &info, 0xc000, &(cur_info->info), sizeof(ModeInfoBlockCompact));
                 size_64k = size64(info.XResolution, info.YResolution, info.BitsPerPixel);
-                if ((info.XResolution > dispi_get_max_xres()) ||
+                if ((info.XResolution > xres) ||
                     (info.BitsPerPixel > max_bpp) ||
                     (size_64k > totalMemory))
                   info.ModeAttributes &= ~VBE_MODE_ATTRIBUTE_SUPPORTED;
@@ -1490,4 +1532,202 @@
 _fail:
   mov ax, #0x014f
   ret
+
+vesa_EDID:
+  db 0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00          /* 0x0000 8-byte header */
+  db 0x04,0x21                                        /* 0x0008 Vendor ID ("AAA") */
+  db 0xAB,0xCD                                        /* 0x000A Product ID */
+  db 0x00,0x00,0x00,0x00                              /* 0x000C Serial number (none) */
+  db 54, 10                                           /* 0x0010 Week of manufactur (54) and year of manufacture (2000) */
+  db 0x01, 0x01                                       /* 0x0012 EDID version number (1.1) */
+  db 0x0F                                             /* 0x0014 Video signal interface (analogue, 0.700 : 0.300 : 1.000 V p-p,
+                                                         Video Setup: Blank Level = Black Level, Separate Sync H & V Signals
+                                                         are supported, Composite Sync Signal on Horizontal is supported, Composite
+                                                         Sync Signal on Green Video is supported, Serration on the Vertical Sync
+                                                         is supported) */
+  db 0x21,0x19                                        /* 0x0015 Scren size (330 mm * 250 mm) */
+  db 0x78                                             /* 0x0017 Display gamma (2.2) */
+  db 0x0D                                             /* 0x0018 Feature flags (no DMPS states, RGB, display is continuous frequency) */
+  db 0x78,0xF5                                        /* 0x0019 Least significant bits for chromaticity and default white point */
+  db 0xA6,0x55,0x48,0x9B,0x26,0x12,0x50,0x54          /* 0x001B Most significant bits for chromaticity and default white point */
+  db 0x00                                             /* 0x0023 Established timings 1 (720 x 400 @ 70Hz, 720 x 400 @ 88Hz,
+                                                         640 x 480 @ 60Hz, 640 x 480 @ 67Hz, 640 x 480 @ 72Hz, 640 x 480 @ 75Hz,
+                                                         800 x 600 @ 56Hz, 800 x 600 @ 60Hz) */
+  db 0x00                                             /* 0x0024 Established timings 2 (800 x 600 @ 72Hz, 800 x 600 @ 75Hz, 832 x 624 @
+                                                         75Hz not 1024 x 768 @ 87Hz(I), 1024 x 768 @ 60Hz, 1024 x 768 @ 70Hz,
+                                                         1024 x 768 @ 75Hz, 1280 x 1024 @ 75Hz) */
+  db 0x00                                             /* 0x0025 Established timings 2 (1152 x 870 @ 75Hz and no manufacturer timings) */
+  db 0x31, 0x59                                       /* 0x0026 Standard timing #1 (640 x 480 @ 85 Hz) */
+  db 0x45, 0x59                                       /* 0x0028 Standard timing #2 (800 x 600 @ 85 Hz) */
+  db 0x61, 0x59                                       /* 0x002A Standard timing #3 (1024 x 768 @ 85 Hz) */
+  db 0x31, 0x4A                                       /* 0x002C Standard timing #4 (640 x 480 @ 70 Hz) */
+  db 0x00, 0x00                                       /* 0x002E Standard timing #5 (1280 x 960 @ 70 Hz) */
+  db 0x00, 0x00                                       /* 0x0030 Standard timing #6 (1600 x 1200 @ 60 Hz) */
+  db 0x01, 0x01                                       /* 0x0032 Standard timing #7 (unused) */
+  db 0x01, 0x01                                       /* 0x0034 Standard timing #8 (unused) */
+                                                      /* 0x0036 First 18-byte descriptor (1024 x 768) (0x0400 x 0x0300) */
+  db 0xb4, 0x1f                                       /* Pixel clock = 108000000 Hz */
+  db 0x00                                             /* Horizontal addressable pixels low byte (0x0400 & 0xFF) */
+  db 0x18                                             /* Horizontal blanking low byte (0x0198 & 0xFF) */
+  db 0x40                                             /* Horizontal addressable pixels high 4 bits (0x0400 >> 8), and */
+                                                      /* Horizontal blanking high 4 bits (0x0198 >> 8) */
+  db 0x00                                             /* Vertical addressable pixels low byte (0x0300 & 0xFF) */
+  db 0x03                                             /* Vertical blanking low byte (0x002A & 0xFF) */
+  db 0x30                                             /* Vertical addressable pixels high 4 bits (0x0300 >> 8), and */
+                                                      /* Vertical blanking high 4 bits (0x002A >> 8) */
+  db 0x08                                             /* Horizontal front porch in pixels low byte (0x0030 & 0xFF) */
+  db 0x08                                             /* Horizontal sync pulse width in pixels low byte (0x0070 & 0xFF) */
+  db 0x11                                             /* Vertical front porch in lines low 4 bits (0x0001 & 0x0F), and */
+                                                      /* Vertical sync pulse width in lines low 4 bits (0x0003 & 0x0F) */
+  db 0x00                                             /* Horizontal front porch pixels high 2 bits (0x0030 >> 8), and */
+                                                      /* Horizontal sync pulse width in pixels high 2 bits (0x0070 >> 8), and */
+                                                      /* Vertical front porch in lines high 2 bits (0x0001 >> 4), and */
+                                                      /* Vertical sync pulse width in lines high 2 bits (0x0003 >> 4) */
+  db 0x00                                             /* Horizontal addressable video image size in mm low 8 bits (0x012C & 0xFF) */
+  db 0x00                                             /* Vertical addressable video image size in mm low 8 bits (0x00E1 & 0xFF) */
+  db 0x00                                             /* Horizontal addressable video image size in mm low 8 bits (0x012C >> 8), and */
+                                                      /* Vertical addressable video image size in mm low 8 bits (0x00E1 >> 8) */
+  db 0x00                                             /*          Left and right border size in pixels (0x00) */
+  db 0x00                                             /*          Top and bottom border size in lines (0x00) */
+  db 0x00                                             /* Flags (non-interlaced, no stereo, analog composite sync, sync on */
+                                                      /* all three (RGB) video signals) */
+                                                      /* 0x0048 First 18-byte descriptor (1152 x 864) */
+  db 0x00, 0x00                                       /* Pixel clock = 108000000 Hz */
+  db 0x00                                             /* Horizontal addressable pixels low byte (0x00 & 0x00) */
+  db 0x00                                             /* Horizontal blanking low byte (0x00 & 0x00) */
+  db 0x00                                             /* Horizontal addressable pixels high 4 bits (0x00 >> 8), and */
+                                                      /* Horizontal blanking high 4 bits (0x00 >> 8) */
+  db 0x00                                             /* Vertical addressable pixels low byte (0x00 & 0x00) */
+  db 0x00                                             /* Vertical blanking low byte (0x00 & 0x00) */
+  db 0x00                                             /* Vertical addressable pixels high 4 bits (0x00 >> 8), and */
+                                                      /* Vertical blanking high 4 bits (0x00 >> 8) */
+  db 0x00                                             /* Horizontal front porch in pixels low byte (0x00 & 0x00) */
+  db 0x00                                             /* Horizontal sync pulse width in pixels low byte (0x00 & 0x00) */
+  db 0x00                                             /* Vertical front porch in lines low 4 bits (0x00 & 0x00), and */
+                                                      /* Vertical sync pulse width in lines low 4 bits (0x00 & 0x00) */
+  db 0x00                                             /* Horizontal front porch pixels high 2 bits (0x00 >> 8), and */
+                                                      /* Horizontal sync pulse width in pixels high 2 bits (0x00 >> 8), and */
+                                                      /* Vertical front porch in lines high 2 bits (0x00 >> 4), and */
+                                                      /* Vertical sync pulse width in lines high 2 bits (0x00 >> 4) */
+  db 0x00                                             /* Horizontal addressable video image size in mm low 8 bits (0x00 & 0x00) */
+  db 0x00                                             /* Vertical addressable video image size in mm low 8 bits (0x00 & 0x00) */
+  db 0x00                                             /* Horizontal addressable video image size in mm low 8 bits (0x00 >> 8), and */
+                                                      /* Vertical addressable video image size in mm low 8 bits (0x00 >> 8) */
+  db 0x00                                             /*          Left and right border size in pixels (0x00) */
+  db 0x00                                             /*          Top and bottom border size in lines (0x00) */
+  db 0x00                                             /* Flags (non-interlaced, no stereo, analog composite sync, sync on */
+                                                      /* all three (RGB) video signals) */
+  db 0x00,0x00,0x00,0xFF,0x00                         /* 0x005A Third 18-byte descriptor - display product serial number */
+  .ascii "0123456789"
+  db 0x0A,0x20,0x20
+
+  db 0x00,0x00,0x00,0xFC,0x00                         /* 0x006C Fourth 18-byte descriptor - display product name  */
+  .ascii "Bochs Screen"
+  db 0x0A
+
+  db 0x00                                             /* 0x007E Extension block count (none)  */
+  db 0x00                                             /* 0x007F Checksum (ignored - recalculated when needed)  */
+
+
+ASM_END
+
+static void vbe_edid(edid, es, di, ds)
+    Bit16u ds,es,di; Bit8u *edid;
+{
+    Bit16u      ss = get_SS();
+    Bit8u       i;
+    Bit8u       sum;
+    Bit8u       t;
+    Bit16u      hres;
+    Bit16u      vres;
+    Bit32u      pixclock;
+
+    hres = dispi_edid_get_xres();
+    vres = dispi_edid_get_yres();
+
+    // Process pixclock from geometry.
+    pixclock = hres + 24;
+    pixclock *= vres + 3;
+    pixclock *= 75;
+    pixclock /= 10000;
+
+    // Copy ref EDID
+    memcpyb(es, di, ds, edid, 0x80);
+
+    // Change mode info with our hres/vres compatible definition.
+    memcpyb(es, di + 0x36, ss, &pixclock, 2);
+    t = hres & 0xFF;
+    memcpyb(es, di + 0x38, ss, &t, 1);
+    t = ((hres >> 8) & 0xF) << 4;
+    memcpyb(es, di + 0x3A, ss, &t, 1);
+    t = vres & 0xFF;
+    memcpyb(es, di + 0x3B, ss, &t, 1);
+    t = ((vres >> 8) & 0xF) << 4;
+    memcpyb(es, di + 0x3D, ss, &t, 1);
+
+    // Process EDID csum
+    sum = 0;
+    for (i = 0; i < 0x80; i++) {
+        memcpyb(ss, &t, es, di + i, 1);
+        sum += t;
+    }
+    // Write EDID csum.
+    t = -sum;
+    memcpyb(es, di + 0x7F, ss, &t, 1);
+}
+
+ASM_START
+
+/** Function 15h - Display Identification Extensions
+ * Input:    AX    = 4F15h   VBE 2.0 Protected Mode Interface
+ *           BL    = 00h     Get capabilities
+ *           BL    = 01h     Read EDID
+ *           CX    =         Controller unit number
+ *           DX    =         EDID block number (if BL = 01h)
+ *           ES:DI =         Null pointer/reserved (if BL = 00h)
+ *           ES:DI =         Pointer to buffer to store EDID block (if BL = 01h)
+ *
+ * Output:   AX    =         Status
+ *           BH    =         Approximate time to get EDID in seconds
+rounded up (if BL = 00h)
+ *           BL    =         DDC level supported: (if BL = 00h)
+ *                            Bit    Meaning if set
+ *                             0      DDC1 supported
+ *                             1      DDC2 supported
+ *                             2      Screen blanked during transfer
+ *           BH    =         Unchanged (if BL = 01h)
+ *           CX    =         Unchanged
+ *           ES:DI =         Unchanged
+ */
+
+
+vbe_biosfn_display_identification_extensions:
+  cmp bl,#0x01
+  jne _get_capabilities
+
+  mov ax, #0xc000
+  mov ds, ax
+  push ds
+  push di
+  push es
+  push #vesa_EDID
+  call _vbe_edid
+  pop bx
+  pop bx
+  pop bx
+  pop bx
+
+  xor cx,cx
+  mov ax, #0x004f
+  ret
+
+_failed:
+  mov ax, #0x014f
+  ret
+
+_get_capabilities:
+  mov ax, #0x004f
+  mov bx, #0x0101
+  ret
+
 ASM_END
Index: vgabios-0.7a/vbe.h
===================================================================
--- vgabios-0.7a.orig/vbe.h	2009-01-25 16:46:08.000000000 +0100
+++ vgabios-0.7a/vbe.h	2015-11-27 15:23:33.374765089 +0100
@@ -310,6 +310,9 @@
   #define VBE_DISPI_LFB_ENABLED            0x40
   #define VBE_DISPI_NOCLEARMEM             0x80
 
+  #define VBE_DISPI_EXT_INDEX_EDID_XRES    0xe
+  #define VBE_DISPI_EXT_INDEX_EDID_YRES    0xf
+
   #define VBE_DISPI_LFB_PHYSICAL_ADDRESS   0xE0000000
 
 #endif
Index: vgabios-0.7a/vgabios.c
===================================================================
--- vgabios-0.7a.orig/vgabios.c	2011-10-15 16:07:21.000000000 +0200
+++ vgabios-0.7a/vgabios.c	2015-11-27 15:23:32.801438367 +0100
@@ -389,9 +389,14 @@
   jmp   int10_end
 int10_test_vbe_0A:
   cmp   al, #0x0A
-  jne   int10_normal
+  jne   int10_test_vbe_15
   call  vbe_biosfn_return_protected_mode_interface
   jmp   int10_end
+int10_test_vbe_15:
+  cmp   al, #0x15
+  jne   int10_normal
+  call  vbe_biosfn_display_identification_extensions
+  jmp   int10_end
 #endif
 
 int10_normal:
