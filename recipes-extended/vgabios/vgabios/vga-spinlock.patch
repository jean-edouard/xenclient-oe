################################################################################
SHORT DESCRIPTION: 
################################################################################
Use IO port spinlock exposed by QEMU to avoid concurent execution of int10
handler.

################################################################################
LONG DESCRIPTION: 
################################################################################
Some system (Windows XP?) will run VGABIOS int10 handler in threads once in
protected mode. The 16b code of VGABIOS is not executed in interrupt context
after real-mode and apparently happens to run concurently under given the right
conditions. The handler not being re-entrant, the guest will likely BSOD.

QEMU has been patched for that reason to expose a spinlock feature on IO port
0x3800. This patch makes use of that IO port to ensure int10 handler cannot be
run concurently. Also remove an int10 invocation in int10 handler path to avoid
deadlock.

################################################################################
CHANGELOG 
################################################################################
Documented: Eric Chanudet, chanudete@ainfosec.com, 17/03/2014
Port to VGABIOS 0.7a: Eric Chanudet, chanudete@ainfosec.com, 01/03/2015

################################################################################
REMOVAL 
################################################################################
This patch can be removed on its own.
This patch needs to be removed if QEMU vga-spinlock.patch is removed.

################################################################################
UPSTREAM PLAN 
################################################################################
This is an OpenXT work-around. There is no plan to upstream this patch.

################################################################################
INTERNAL DEPENDENCIES 
################################################################################
Implements QEMU: vga-spinlock.patch.
Depended on by VGABIOS: vga-shadow-bda.patch.

################################################################################
PATCHES 
################################################################################
--- a/vgabios.c
+++ b/vgabios.c
@@ -297,6 +297,7 @@ vgabios_int10_handler:
   pop ds
   pop es
 #endif
+  call  int10_spin_lock
   cmp   ah, #0x0f
   jne   int10_test_1A
   call  biosfn_get_video_mode
@@ -413,6 +414,7 @@ int10_normal:
   pop ds
   pop es
 int10_end:
+  call  int10_spin_unlock
   popf
   iret
 ASM_END
@@ -420,6 +422,40 @@ ASM_END
 #include "vgatables.h"
 #include "vgafonts.h"
 
+ASM_START
+int10_spin_lock:
+  pushf
+  push  ax
+  push  dx
+
+  mov   dx, # VGA_PORT_SPIN_LOCK
+int10_spin_lock_loop:
+  in    ax, dx
+  test  ax, ax
+  jz    int10_spin_lock_loop
+
+  pop   dx
+  pop   ax
+  popf
+  ret
+ASM_END
+
+ASM_START
+int10_spin_unlock:
+  pushf
+  push  ax
+  push  dx
+
+  mov   dx, # VGA_PORT_SPIN_LOCK
+  mov   ax, #0x0001
+  out   dx, ax
+
+  pop   dx
+  pop   ax
+  popf
+  ret
+ASM_END
+
 /*
  * Boot time harware inits 
  */
@@ -1039,14 +1075,13 @@ static void biosfn_set_video_mode(mode)
  // Write the fonts in memory
  if(vga_modes[line].class==TEXT)
   {
+  biosfn_load_text_8_16_pat(0x04,0x00);
 ASM_START
-  ;; copy and activate 8x16 font
-  mov ax, #0x1104
-  mov bl, #0x00
-  int #0x10
+  pusha
   mov ax, #0x1103
   mov bl, #0x00
-  int #0x10
+  call  biosfn_set_text_block_specifier
+  popa
 ASM_END
   }
 
--- a/vgatables.h
+++ b/vgatables.h
@@ -26,7 +26,15 @@
 #define BIOSMEM_VBE_FLAG      0xB9
 #define BIOSMEM_VBE_MODE      0xBA
 
+/*
+ *
+ * VGA port facility
+ *
+ */
+#define VGA_PORT_RANGE_BASE    0x3800
+#define VGA_PORT_RANGE_SIZE    0x2
 
+#define VGA_PORT_SPIN_LOCK     0x3800 /* word */
 /*
  *
  * VGA registers
